{"is_source_file": true, "format": "Python", "description": "This file contains FastAPI route definitions for user authentication, management, and plan operations including registration, login, user info retrieval, user listing, user deletion, plan creation, plan listing, and assigning plans to users.", "external_files": ["schemas", "crud", "auth"], "external_methods": ["auth.get_db", "crud.get_user_by_username", "crud.create_user", "crud.get_user_with_plan", "crud.list_users", "crud.get_user_by_id", "crud.get_plan_by_name", "crud.create_plan", "crud.list_plans", "crud.get_plan_by_id", "crud.assign_plan_to_user", "auth.authenticate_user", "auth.create_access_token", "auth.get_current_active_user"], "published": ["router"], "classes": [], "methods": [{"name": "register_user(user_in: schemas.UserCreate, db: Session = Depends(auth.get_db))", "description": "Registers a new user after verifying username availability, then returns the created user with their plan.", "scope": "", "scopeKind": ""}, {"name": "login(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(auth.get_db))", "description": "Authenticates user credentials and returns a JWT token if valid.", "scope": "", "scopeKind": ""}, {"name": "read_users_me(current_user=Depends(auth.get_current_active_user), db: Session = Depends(auth.get_db))", "description": "Retrieves the profile and plan of the currently logged-in user.", "scope": "", "scopeKind": ""}, {"name": "list_all_users(db: Session = Depends(auth.get_db))", "description": "Lists all users with their plans, intended for admin use.", "scope": "", "scopeKind": ""}, {"name": "delete_user(user_id: int, db: Session = Depends(auth.get_db))", "description": "Deletes a user specified by user ID.", "scope": "", "scopeKind": ""}, {"name": "create_plan(plan: schemas.PlanCreate, db: Session = Depends(auth.get_db))", "description": "Creates a new subscription plan after checking for duplicate names.", "scope": "", "scopeKind": ""}, {"name": "list_plans(db: Session = Depends(auth.get_db))", "description": "Lists all available subscription plans.", "scope": "", "scopeKind": ""}, {"name": "assign_plan( user_id: int = Body(..., embed=True, description=\"User ID\"), plan_id: int = Body(..., embed=True, description=\"Plan ID\"), db: Session = Depends(auth.get_db) )", "description": "Assigns a specified plan to a user.", "scope": "", "scopeKind": ""}], "calls": ["crud.get_user_by_username", "crud.create_user", "crud.get_user_with_plan", "crud.list_users", "crud.get_user_by_id", "crud.get_plan_by_name", "crud.create_plan", "crud.list_plans", "crud.get_plan_by_id", "crud.assign_plan_to_user", "auth.get_db", "auth.authenticate_user", "auth.create_access_token", "auth.get_current_active_user"], "search-terms": ["routers_users_plans", "FastAPI routes", "user registration", "user login", "plan management", "assign plan", "JWT token", "user profile", "user deletion"], "state": 2, "file_id": 19, "knowledge_revision": 45, "git_revision": "", "ctags": [{"_type": "tag", "name": "assign_plan", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/routers_users_plans.py", "pattern": "/^def assign_plan($/", "language": "Python", "kind": "function", "signature": "( user_id: int = Body(..., embed=True, description=\"User ID\"), plan_id: int = Body(..., embed=True, description=\"Plan ID\"), db: Session = Depends(auth.get_db) )"}, {"_type": "tag", "name": "create_plan", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/routers_users_plans.py", "pattern": "/^def create_plan(plan: schemas.PlanCreate, db: Session = Depends(auth.get_db)):$/", "language": "Python", "kind": "function", "signature": "(plan: schemas.PlanCreate, db: Session = Depends(auth.get_db))"}, {"_type": "tag", "name": "delete_user", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/routers_users_plans.py", "pattern": "/^def delete_user(user_id: int, db: Session = Depends(auth.get_db)):$/", "language": "Python", "kind": "function", "signature": "(user_id: int, db: Session = Depends(auth.get_db))"}, {"_type": "tag", "name": "list_all_users", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/routers_users_plans.py", "pattern": "/^def list_all_users(db: Session = Depends(auth.get_db)):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(auth.get_db))"}, {"_type": "tag", "name": "list_plans", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/routers_users_plans.py", "pattern": "/^def list_plans(db: Session = Depends(auth.get_db)):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(auth.get_db))"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/routers_users_plans.py", "pattern": "/^def login(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(auth.get_db)):$/", "language": "Python", "kind": "function", "signature": "(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(auth.get_db))"}, {"_type": "tag", "name": "read_users_me", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/routers_users_plans.py", "pattern": "/^def read_users_me(current_user=Depends(auth.get_current_active_user), db: Session = Depends(auth/", "language": "Python", "kind": "function", "signature": "(current_user=Depends(auth.get_current_active_user), db: Session = Depends(auth.get_db))"}, {"_type": "tag", "name": "register_user", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/routers_users_plans.py", "pattern": "/^def register_user(user_in: schemas.UserCreate, db: Session = Depends(auth.get_db)):$/", "language": "Python", "kind": "function", "signature": "(user_in: schemas.UserCreate, db: Session = Depends(auth.get_db))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/routers_users_plans.py", "pattern": "/^router = APIRouter(prefix=\"\", tags=[\"Users and Plans\"])$/", "language": "Python", "kind": "variable"}], "hash": "ac6b9a1c601f12f9bc378e7f31f8eee7", "format-version": 4, "code-base-name": "plan_based_api_backend", "filename": "plan_based_api_backend/src/api/routers_users_plans.py", "fields": [{"name": "router = APIRouter(prefix=\"\", tags=[\"Users and Plans\"])", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"45": ""}]}