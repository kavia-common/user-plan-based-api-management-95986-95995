{"is_source_file": true, "format": "Python", "description": "Source code defining API routes for user registration, authentication, user management, and plan management using FastAPI. It includes route handler functions, dependency injections, and interactions with database CRUD operations.", "external_files": ["schemas", "crud", "auth"], "external_methods": ["auth.get_db", "auth.get_current_active_user", "auth.authenticate_user", "auth.create_access_token", "crud.get_user_by_username", "crud.create_user", "crud.get_user_with_plan", "crud.list_users", "crud.get_user_by_id", "crud.get_plan_by_name", "crud.create_plan", "crud.list_plans", "crud.get_plan_by_id", "crud.assign_plan_to_user"], "published": ["register_user", "login", "read_users_me", "list_all_users", "delete_user", "create_plan", "list_plans", "assign_plan"], "classes": [], "methods": [{"name": "register_user(user_in: schemas.UserCreate, db: Session = Depends(auth.get_db))", "description": "Registers a new user after checking for existing username.", "scope": "", "scopeKind": ""}, {"name": "login(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(auth.get_db))", "description": "Authenticates user and returns JWT token.", "scope": "", "scopeKind": ""}, {"name": "read_users_me(current_user=Depends(auth.get_current_active_user), db: Session = Depends(auth.get_db))", "description": "Returns the profile and assigned plan of the current logged-in user.", "scope": "", "scopeKind": ""}, {"name": "list_all_users(db: Session = Depends(auth.get_db))", "description": "Lists all registered users with their plans (admin use).", "scope": "", "scopeKind": ""}, {"name": "delete_user(user_id: int, db: Session = Depends(auth.get_db))", "description": "Deletes a user by ID.", "scope": "", "scopeKind": ""}, {"name": "create_plan(plan: schemas.PlanCreate, db: Session = Depends(auth.get_db))", "description": "Creates a new subscription plan.", "scope": "", "scopeKind": ""}, {"name": "list_plans(db: Session = Depends(auth.get_db))", "description": "Lists all available plans.", "scope": "", "scopeKind": ""}, {"name": "assign_plan( user_id: int = Body(..., embed=True, description=\"User ID\"), plan_id: int = Body(..., embed=True, description=\"Plan ID\"), db: Session = Depends(auth.get_db) )", "description": "Assigns a subscription plan to a user.", "scope": "", "scopeKind": ""}], "calls": ["crud.get_user_by_username", "crud.create_user", "crud.get_user_with_plan", "crud.list_users", "crud.get_user_by_id", "crud.get_plan_by_name", "crud.create_plan", "crud.list_plans", "crud.get_plan_by_id", "crud.assign_plan_to_user", "auth.get_db", "auth.get_current_active_user", "auth.authenticate_user", "auth.create_access_token"], "search-terms": ["fastapi routers", "user registration", "user login", "plan management", "JWT token issuance", "user management API", "assign plan to user", "authentication endpoints"], "state": 2, "file_id": 19, "knowledge_revision": 50, "git_revision": "9417384d7c6e172a91f1ea3b1f7cd030944ba81f", "revision_history": [{"45": ""}, {"50": "9417384d7c6e172a91f1ea3b1f7cd030944ba81f"}], "ctags": [{"_type": "tag", "name": "assign_plan", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/routers_users_plans.py", "pattern": "/^def assign_plan($/", "language": "Python", "kind": "function", "signature": "( user_id: int = Body(..., embed=True, description=\"User ID\"), plan_id: int = Body(..., embed=True, description=\"Plan ID\"), db: Session = Depends(auth.get_db) )"}, {"_type": "tag", "name": "create_plan", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/routers_users_plans.py", "pattern": "/^def create_plan(plan: schemas.PlanCreate, db: Session = Depends(auth.get_db)):$/", "language": "Python", "kind": "function", "signature": "(plan: schemas.PlanCreate, db: Session = Depends(auth.get_db))"}, {"_type": "tag", "name": "delete_user", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/routers_users_plans.py", "pattern": "/^def delete_user(user_id: int, db: Session = Depends(auth.get_db)):$/", "language": "Python", "kind": "function", "signature": "(user_id: int, db: Session = Depends(auth.get_db))"}, {"_type": "tag", "name": "list_all_users", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/routers_users_plans.py", "pattern": "/^def list_all_users(db: Session = Depends(auth.get_db)):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(auth.get_db))"}, {"_type": "tag", "name": "list_plans", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/routers_users_plans.py", "pattern": "/^def list_plans(db: Session = Depends(auth.get_db)):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(auth.get_db))"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/routers_users_plans.py", "pattern": "/^def login(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(auth.get_db)):$/", "language": "Python", "kind": "function", "signature": "(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(auth.get_db))"}, {"_type": "tag", "name": "read_users_me", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/routers_users_plans.py", "pattern": "/^def read_users_me(current_user=Depends(auth.get_current_active_user), db: Session = Depends(auth/", "language": "Python", "kind": "function", "signature": "(current_user=Depends(auth.get_current_active_user), db: Session = Depends(auth.get_db))"}, {"_type": "tag", "name": "register_user", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/routers_users_plans.py", "pattern": "/^def register_user(user_in: schemas.UserCreate, db: Session = Depends(auth.get_db)):$/", "language": "Python", "kind": "function", "signature": "(user_in: schemas.UserCreate, db: Session = Depends(auth.get_db))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/routers_users_plans.py", "pattern": "/^router = APIRouter(prefix=\"\", tags=[\"Users and Plans\"])$/", "language": "Python", "kind": "variable"}], "hash": "bf68341979da638156e30a2ed695bea6", "format-version": 4, "code-base-name": "plan_based_api_backend", "filename": "plan_based_api_backend/src/api/routers_users_plans.py", "fields": [{"name": "router = APIRouter(prefix=\"\", tags=[\"Users and Plans\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}