{"is_source_file": true, "format": "Python", "description": "This file sets up database connection and session management for a plan-based API backend, including environment variable loading.", "external_files": ["sqlalchemy", "dotenv", "os"], "external_methods": ["load_dotenv", "create_engine", "sessionmaker", "os.getenv"], "published": ["get_env", "DB_URL", "engine", "SessionLocal"], "classes": [], "methods": [{"name": "str get_env(key: str, default: str = None)", "description": "Retrieves environment variable value, loading environment variables if needed.", "scope": "", "scopeKind": ""}], "calls": ["load_dotenv", "os.getenv", "create_engine", "sessionmaker"], "search-terms": ["database setup", "session management", "get_env", "SQLAlchemy", "dotenv", "environment variable"], "state": 2, "file_id": 15, "knowledge_revision": 37, "git_revision": "c4f7de4a97f82307ba134b517f950af2f33e249d", "ctags": [{"_type": "tag", "name": "DB_URL", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/database.py", "pattern": "/^DB_URL = get_env(\"PLAN_API_DB_URL\", \"sqlite:\\/\\/\\/.\\/planapi.sqlite3\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SessionLocal", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/database.py", "pattern": "/^SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "engine", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/database.py", "pattern": "/^engine = create_engine(DB_URL, connect_args={\"check_same_thread\": False} if \"sqlite\" in DB_URL e/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_env", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/database.py", "pattern": "/^def get_env(key: str, default: str = None) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(key: str, default: str = None)"}], "hash": "0ffb03cba01d01d8e8d6cdce3f1aa8a5", "format-version": 4, "code-base-name": "plan_based_api_backend", "filename": "plan_based_api_backend/src/api/database.py", "fields": [{"name": "DB_URL = get_env(\"PLAN_API_DB_URL\", \"sqlite:\\/\\/\\/.\\/planapi.sqlite3\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "engine = create_engine(DB_URL, connect_args={\"check_same_thread\": False} if \"sqlite\" in DB_URL e/", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"37": "c4f7de4a97f82307ba134b517f950af2f33e249d"}]}