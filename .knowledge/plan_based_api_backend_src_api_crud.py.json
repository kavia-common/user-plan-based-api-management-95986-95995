{"is_source_file": true, "format": "Python", "description": "This file contains CRUD (Create, Read, Update, Delete) operations and business logic related to users, plans, and user-plan assignments for a web application's backend. It interfaces with database models and schemas, providing functions for creating users and plans, retrieving them by various attributes, listing all users and plans, and assigning plans to users.", "external_files": ["models", "schemas", "auth"], "external_methods": ["auth.get_password_hash"], "published": ["create_user", "get_user_by_username", "get_user_by_id", "list_users", "create_plan", "get_plan_by_name", "get_plan_by_id", "list_plans", "assign_plan_to_user", "get_user_with_plan"], "classes": [], "methods": [{"name": "models.User create_user(db: Session, user_in: schemas.UserCreate)", "description": "Creates a new user with a hashed password and saves it to the database.", "scope": "", "scopeKind": ""}, {"name": "Optional[models.User] get_user_by_username(db: Session, username: str)", "description": "Retrieves a user from the database by username.", "scope": "", "scopeKind": ""}, {"name": "Optional[models.User] get_user_by_id(db: Session, user_id: int)", "description": "Retrieves a user from the database by user ID.", "scope": "", "scopeKind": ""}, {"name": "list_users(db: Session)", "description": "Returns a list of all users.", "scope": "", "scopeKind": ""}, {"name": "models.Plan create_plan(db: Session, plan_in: schemas.PlanCreate)", "description": "Creates a new plan with specified details and saves it.", "scope": "", "scopeKind": ""}, {"name": "Optional[models.Plan] get_plan_by_name(db: Session, name: str)", "description": "Retrieves a plan from the database by plan name.", "scope": "", "scopeKind": ""}, {"name": "Optional[models.Plan] get_plan_by_id(db: Session, plan_id: int)", "description": "Retrieves a plan from the database by plan ID.", "scope": "", "scopeKind": ""}, {"name": "list_plans(db: Session)", "description": "Returns a list of all plans.", "scope": "", "scopeKind": ""}, {"name": "assign_plan_to_user(db: Session, user_id: int, plan_id: int)", "description": "Assigns a plan to a user, updating existing assignment if present.", "scope": "", "scopeKind": ""}, {"name": "get_user_with_plan(db: Session, user: models.User)", "description": "Returns user details along with their assigned plan name.", "scope": "", "scopeKind": ""}], "calls": ["auth.get_password_hash"], "search-terms": ["crud", "user plan assignment", "SQLAlchemy session", "model methods", "business logic"], "state": 2, "file_id": 18, "knowledge_revision": 43, "git_revision": "", "ctags": [{"_type": "tag", "name": "assign_plan_to_user", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/crud.py", "pattern": "/^def assign_plan_to_user(db: Session, user_id: int, plan_id: int):$/", "language": "Python", "kind": "function", "signature": "(db: Session, user_id: int, plan_id: int)"}, {"_type": "tag", "name": "create_plan", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/crud.py", "pattern": "/^def create_plan(db: Session, plan_in: schemas.PlanCreate) -> models.Plan:$/", "language": "Python", "typeref": "typename:models.Plan", "kind": "function", "signature": "(db: Session, plan_in: schemas.PlanCreate)"}, {"_type": "tag", "name": "create_user", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/crud.py", "pattern": "/^def create_user(db: Session, user_in: schemas.UserCreate) -> models.User:$/", "language": "Python", "typeref": "typename:models.User", "kind": "function", "signature": "(db: Session, user_in: schemas.UserCreate)"}, {"_type": "tag", "name": "get_plan_by_id", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/crud.py", "pattern": "/^def get_plan_by_id(db: Session, plan_id: int) -> Optional[models.Plan]:$/", "language": "Python", "typeref": "typename:Optional[models.Plan]", "kind": "function", "signature": "(db: Session, plan_id: int)"}, {"_type": "tag", "name": "get_plan_by_name", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/crud.py", "pattern": "/^def get_plan_by_name(db: Session, name: str) -> Optional[models.Plan]:$/", "language": "Python", "typeref": "typename:Optional[models.Plan]", "kind": "function", "signature": "(db: Session, name: str)"}, {"_type": "tag", "name": "get_user_by_id", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/crud.py", "pattern": "/^def get_user_by_id(db: Session, user_id: int) -> Optional[models.User]:$/", "language": "Python", "typeref": "typename:Optional[models.User]", "kind": "function", "signature": "(db: Session, user_id: int)"}, {"_type": "tag", "name": "get_user_by_username", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/crud.py", "pattern": "/^def get_user_by_username(db: Session, username: str) -> Optional[models.User]:$/", "language": "Python", "typeref": "typename:Optional[models.User]", "kind": "function", "signature": "(db: Session, username: str)"}, {"_type": "tag", "name": "get_user_with_plan", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/crud.py", "pattern": "/^def get_user_with_plan(db: Session, user: models.User):$/", "language": "Python", "kind": "function", "signature": "(db: Session, user: models.User)"}, {"_type": "tag", "name": "list_plans", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/crud.py", "pattern": "/^def list_plans(db: Session):$/", "language": "Python", "kind": "function", "signature": "(db: Session)"}, {"_type": "tag", "name": "list_users", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/crud.py", "pattern": "/^def list_users(db: Session):$/", "language": "Python", "kind": "function", "signature": "(db: Session)"}], "hash": "289cf8bfb5e63f7dcf19323627d5986a", "format-version": 4, "code-base-name": "plan_based_api_backend", "filename": "plan_based_api_backend/src/api/crud.py", "revision_history": [{"43": ""}]}