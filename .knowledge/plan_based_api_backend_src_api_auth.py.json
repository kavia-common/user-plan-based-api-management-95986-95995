{"is_source_file": true, "format": "Python", "description": "This file contains authentication utilities for a FastAPI-based application, including JWT token management, user verification, database session handling, and user dependency resolution.", "external_files": ["models", "database", "schemas"], "external_methods": ["models.User.verify_password", "models.User.get_password_hash", "database.get_env", "database.SessionLocal", "schemas.TokenData"], "published": ["oauth2_scheme", "SECRET_KEY", "ALGORITHM", "ACCESS_TOKEN_EXPIRE_MINUTES", "verify_password", "get_password_hash", "authenticate_user", "create_access_token", "get_db", "get_current_user", "get_current_active_user"], "classes": [{"name": "models.User", "description": "User model with password verification and hashing methods"}, {"name": "schemas.TokenData", "description": "Schema for token payload data"}], "methods": [{"name": "verify_password(plain_password, hashed_password)", "description": "Verify if the plain password matches the hashed password", "scope": "", "scopeKind": ""}, {"name": "get_password_hash(password)", "description": "Generate a hash for the given password", "scope": "", "scopeKind": ""}, {"name": "Optional[models.User] authenticate_user(db: Session, username: str, password: str)", "description": "Authenticate user credentials against the database", "scope": "", "scopeKind": ""}, {"name": "create_access_token(data: dict, expires_delta: Optional[timedelta] = None)", "description": "Create a JWT access token with optional expiration", "scope": "", "scopeKind": ""}, {"name": "get_db()", "description": "Provide a database session dependency for FastAPI", "scope": "", "scopeKind": ""}, {"name": "models.User get_current_user(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db))", "description": "Retrieve the current user based on JWT token", "scope": "", "scopeKind": ""}, {"name": "models.User get_current_active_user(current_user: models.User = Depends(get_current_user))", "description": "Return the current user if active; placeholder for further checks", "scope": "", "scopeKind": ""}], "calls": ["models.User.verify_password", "models.User.get_password_hash", "database.get_env", "database.SessionLocal", "jwt.decode", "jwt.encode", "db.query", "db.close"], "search-terms": ["JWT utility functions", "FastAPI dependency for current user", "JWT token creation", "OAuth2PasswordBearer", "JWTError", "get_current_user", "auth/login"], "state": 2, "file_id": 17, "knowledge_revision": 41, "git_revision": "c4f7de4a97f82307ba134b517f950af2f33e249d", "ctags": [{"_type": "tag", "name": "ACCESS_TOKEN_EXPIRE_MINUTES", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^ACCESS_TOKEN_EXPIRE_MINUTES = 60 * 8  # 8 hours$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ALGORITHM", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^ALGORITHM = \"HS256\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SECRET_KEY", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^SECRET_KEY = database.get_env(\"PLAN_API_SECRET_KEY\", \"default_supersecret_key\")  # Should be set/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "authenticate_user", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^def authenticate_user(db: Session, username: str, password: str) -> Optional[models.User]:$/", "language": "Python", "typeref": "typename:Optional[models.User]", "kind": "function", "signature": "(db: Session, username: str, password: str)"}, {"_type": "tag", "name": "create_access_token", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^def create_access_token(data: dict, expires_delta: Optional[timedelta] = None):$/", "language": "Python", "kind": "function", "signature": "(data: dict, expires_delta: Optional[timedelta] = None)"}, {"_type": "tag", "name": "get_current_active_user", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^def get_current_active_user(current_user: models.User = Depends(get_current_user)) -> models.Use/", "language": "Python", "typeref": "typename:models.User", "kind": "function", "signature": "(current_user: models.User = Depends(get_current_user))"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^def get_current_user(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db)) -> mode/", "language": "Python", "typeref": "typename:models.User", "kind": "function", "signature": "(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^def get_db():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_password_hash", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^def get_password_hash(password):$/", "language": "Python", "kind": "function", "signature": "(password)"}, {"_type": "tag", "name": "oauth2_scheme", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"auth\\/login\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "verify_password", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^def verify_password(plain_password, hashed_password):$/", "language": "Python", "kind": "function", "signature": "(plain_password, hashed_password)"}], "hash": "5b0cbf58171471a1cafb53f25a520435", "format-version": 4, "code-base-name": "plan_based_api_backend", "filename": "plan_based_api_backend/src/api/auth.py", "fields": [{"name": "ACCESS_TOKEN_EXPIRE_MINUTES = 60 * 8  # 8 hours", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ALGORITHM = \"HS256\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SECRET_KEY = database.get_env(\"PLAN_API_SECRET_KEY\", \"default_supersecret_key\")  # Should be set/", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"auth\\/login\")", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"41": "c4f7de4a97f82307ba134b517f950af2f33e249d"}]}