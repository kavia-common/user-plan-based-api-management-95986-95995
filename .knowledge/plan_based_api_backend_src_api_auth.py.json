{"is_source_file": true, "format": "Python", "description": "This file contains authentication-related functionalities for a web API, including password hashing, user verification, JWT token creation, and user plan retrieval.", "external_files": ["passlib.context", "datetime", "jose", "fastapi", "fastapi.security", "sqlalchemy.orm", "./models", "./config"], "external_methods": ["passlib.context.CryptContext.verify", "passlib.context.CryptContext.hash", "jwt.encode", "jwt.decode", "db.query", "db.filter", "db.first", "db.order_by"], "published": ["verify_password", "get_password_hash", "authenticate_user", "create_access_token", "get_current_user", "get_user_plan"], "classes": [], "methods": [{"name": "verify_password(plain_password, hashed_password)", "description": "Verifies a plaintext password against a hashed password.", "scope": "", "scopeKind": ""}, {"name": "get_password_hash(password)", "description": "Generates a hashed version of the provided password.", "scope": "", "scopeKind": ""}, {"name": "authenticate_user(db: Session, username: str, password: str)", "description": "Authenticates a user by username and password against the database.", "scope": "", "scopeKind": ""}, {"name": "create_access_token(data: dict, expires_delta: int = None)", "description": "Creates a JWT token with an expiration time based on provided data.", "scope": "", "scopeKind": ""}, {"name": "get_current_user(db: Session = Depends(lambda: None), token: str = Depends(oauth2_scheme))", "description": "Retrieves the current user from a JWT token present in the request.", "scope": "", "scopeKind": ""}, {"name": "get_user_plan(db: Session, user: User)", "description": "Retrieves the current plan associated with a user.", "scope": "", "scopeKind": ""}], "calls": ["pwd_context.verify", "pwd_context.hash", "jwt.encode", "jwt.decode", "db.query", "db.filter", "db.first", "db.order_by"], "search-terms": ["auth.py", "JWT_SECRET_KEY", "create_access_token", "get_current_user", "get_user_plan"], "state": 2, "file_id": 9, "knowledge_revision": 20, "git_revision": "", "ctags": [{"_type": "tag", "name": "ACCESS_TOKEN_EXPIRE_MINUTES", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^ACCESS_TOKEN_EXPIRE_MINUTES = settings.ACCESS_TOKEN_EXPIRE_MINUTES$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ALGORITHM", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^ALGORITHM = settings.JWT_ALGORITHM$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SECRET_KEY", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^SECRET_KEY = settings.JWT_SECRET_KEY$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "authenticate_user", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^def authenticate_user(db: Session, username: str, password: str):$/", "language": "Python", "kind": "function", "signature": "(db: Session, username: str, password: str)"}, {"_type": "tag", "name": "create_access_token", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^def create_access_token(data: dict, expires_delta: int = None):$/", "language": "Python", "kind": "function", "signature": "(data: dict, expires_delta: int = None)"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^def get_current_user(db: Session = Depends(lambda: None), token: str = Depends(oauth2_scheme)):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(lambda: None), token: str = Depends(oauth2_scheme))"}, {"_type": "tag", "name": "get_password_hash", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^def get_password_hash(password):$/", "language": "Python", "kind": "function", "signature": "(password)"}, {"_type": "tag", "name": "get_user_plan", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^def get_user_plan(db: Session, user: User):$/", "language": "Python", "kind": "function", "signature": "(db: Session, user: User)"}, {"_type": "tag", "name": "oauth2_scheme", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/login\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "pwd_context", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "settings", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^settings = get_settings()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "verify_password", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^def verify_password(plain_password, hashed_password):$/", "language": "Python", "kind": "function", "signature": "(plain_password, hashed_password)"}], "hash": "75be40093f3e066550b1edfa412106e9", "format-version": 4, "code-base-name": "plan_based_api_backend", "filename": "plan_based_api_backend/src/api/auth.py", "fields": [{"name": "ACCESS_TOKEN_EXPIRE_MINUTES = settings.ACCESS_TOKEN_EXPIRE_MINUTES", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ALGORITHM = settings.JWT_ALGORITHM", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SECRET_KEY = settings.JWT_SECRET_KEY", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/login\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "settings = get_settings()", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"20": ""}]}