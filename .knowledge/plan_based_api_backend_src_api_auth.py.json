{"is_source_file": true, "format": "Python", "description": "This file contains authentication utilities for a FastAPI application, including JWT token creation, user authentication, and dependencies for retrieving the current user based on JWT tokens. It uses an in-memory data store for users and plans, and implements basic authentication and token verification mechanisms.", "external_files": ["schemas"], "external_methods": ["schemas.TokenData"], "published": ["oauth2_scheme", "authenticate_user", "create_access_token", "get_current_user", "get_current_active_user"], "classes": [{"name": "TokenData", "description": "Schema for token payload containing username."}], "methods": [{"name": "verify_password(plain_password, actual_password)", "description": "Compares plain password with stored password (plain text comparison for demo purposes).", "scope": "", "scopeKind": ""}, {"name": "get_password_hash(password)", "description": "Placeholder function to emulate password hashing, returns the password as-is.", "scope": "", "scopeKind": ""}, {"name": "Optional[dict] authenticate_user(username: str, password: str)", "description": "Authenticates user credentials against in-memory user store.", "scope": "", "scopeKind": ""}, {"name": "create_access_token(data: dict, expires_delta: Optional[timedelta] = None)", "description": "Creates JWT token with expiration, encodes the provided data.", "scope": "", "scopeKind": ""}, {"name": "dict get_current_user(token: str = Depends(oauth2_scheme))", "description": "Retrieves current user from JWT token, raising HTTPException if invalid.", "scope": "", "scopeKind": ""}, {"name": "dict get_current_active_user(current_user: dict = Depends(get_current_user))", "description": "Returns the current user if active; placeholder for additional checks.", "scope": "", "scopeKind": ""}], "calls": ["jwt.encode", "jwt.decode"], "search-terms": ["JWT", "auth.py", "FastAPI security dependencies", "in-memory user store", "create_access_token", "get_current_user"], "state": 2, "file_id": 17, "knowledge_revision": 51, "git_revision": "9417384d7c6e172a91f1ea3b1f7cd030944ba81f", "revision_history": [{"41": "c4f7de4a97f82307ba134b517f950af2f33e249d"}, {"51": "9417384d7c6e172a91f1ea3b1f7cd030944ba81f"}], "ctags": [{"_type": "tag", "name": "ACCESS_TOKEN_EXPIRE_MINUTES", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^ACCESS_TOKEN_EXPIRE_MINUTES = 60 * 8$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ALGORITHM", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^ALGORITHM = \"HS256\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "PLANS", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^PLANS = [$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SECRET_KEY", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^SECRET_KEY = \"supersecret_demo_key\"  # No .env, just hardcoded for demo$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "USERS", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^USERS = [$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "authenticate_user", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^def authenticate_user(username: str, password: str) -> Optional[dict]:$/", "language": "Python", "typeref": "typename:Optional[dict]", "kind": "function", "signature": "(username: str, password: str)"}, {"_type": "tag", "name": "create_access_token", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^def create_access_token(data: dict, expires_delta: Optional[timedelta] = None):$/", "language": "Python", "kind": "function", "signature": "(data: dict, expires_delta: Optional[timedelta] = None)"}, {"_type": "tag", "name": "get_current_active_user", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^def get_current_active_user(current_user: dict = Depends(get_current_user)) -> dict:$/", "language": "Python", "typeref": "typename:dict", "kind": "function", "signature": "(current_user: dict = Depends(get_current_user))"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^def get_current_user(token: str = Depends(oauth2_scheme)) -> dict:$/", "language": "Python", "typeref": "typename:dict", "kind": "function", "signature": "(token: str = Depends(oauth2_scheme))"}, {"_type": "tag", "name": "get_password_hash", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^def get_password_hash(password):$/", "language": "Python", "kind": "function", "signature": "(password)"}, {"_type": "tag", "name": "id_to_plan", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^id_to_plan = {p[\"id\"]: p for p in PLANS}$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "id_to_user", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^id_to_user = {u[\"id\"]: u for u in USERS}$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "oauth2_scheme", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"auth\\/login\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "plan_name_to_plan", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^plan_name_to_plan = {p[\"name\"]: p for p in PLANS}$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "username_to_user", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^username_to_user = {u[\"username\"]: u for u in USERS}$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "verify_password", "path": "/home/kavia/workspace/code-generation/user-plan-based-api-management-95986-95995/plan_based_api_backend/src/api/auth.py", "pattern": "/^def verify_password(plain_password, actual_password):$/", "language": "Python", "kind": "function", "signature": "(plain_password, actual_password)"}], "hash": "a942691818c6ddc59e7ee96f039b994b", "format-version": 4, "code-base-name": "plan_based_api_backend", "filename": "plan_based_api_backend/src/api/auth.py", "fields": [{"name": "ACCESS_TOKEN_EXPIRE_MINUTES = 60 * 8", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ALGORITHM = \"HS256\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "PLANS = [", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SECRET_KEY = \"supersecret_demo_key\"  # No .env, just hardcoded for demo", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "USERS = [", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "id_to_plan = {p[\"id\"]: p for p in PLANS}", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "id_to_user = {u[\"id\"]: u for u in USERS}", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"auth\\/login\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "plan_name_to_plan = {p[\"name\"]: p for p in PLANS}", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "username_to_user = {u[\"username\"]: u for u in USERS}", "scope": "", "scopeKind": "", "description": "unavailable"}]}